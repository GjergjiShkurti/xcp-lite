[package]
name = "xcp"
version = "0.3.0"
edition = "2021"
resolver = "2"
rust-version = "1.76"

authors = ["Vector Informatik GmbH, RDM"]
description = "XCP for Rust, based on XCPlite"
readme = "README.md"
keywords = ["XCP","Rust","Vector","ASAM","CANape","A2L"]
license = "MIT OR Apache-2.0"
homepage = "https://vector.com"  
repository = "https://github.com/vectorgrp/xcp-lite"
categories = ["MC"] 

[workspace]
members = [    
    "xcp_client",
    "examples/hello_xcp",
    "examples/single_thread_demo",
    "examples/multi_thread_demo",
    "examples/protobuf_demo",
    "examples/point_cloud_demo",
    "examples/rayon_demo",
    "examples/tokio_demo",
    "examples/type_description_demo",
    "examples/xcp_idl_generator_demo",       
]


[features]

# Feature json enables dependency to serde and serde_json
json = ["dep:serde","dep:serde_json"]

# Feature a2l_gen to enable automatic registry entries for calibration page structs
auto_reg = ["dep:xcp_type_description_derive","dep:xcp_type_description"]

default = ["json","auto_reg"]
#default = ["json"]

[dependencies]

# Command line parser
clap = { version = "4.5.9", features = ["derive"] }

# Rust macro to automatically implement the builder pattern for arbitrary structs
derive_builder = "0.20.0"

# Raw FFI bindings to platform libraries like libc
libc = "0.2.153"

# A macro to generate structures which behave like bitflags
bitflags = "2.6.0"

# Logging
log = "0.4.21"
env_logger = "0.11.3"

# Collects build-information of your Rust crate
# used to generate EPK
# build-info = "0.0.36"

# A generic serialization/deserialization framework
# Used to handle json parameter files
serde = { version = "1.0", features = ["derive"], optional = true }
serde_json = { version = "1.0", optional = true }

# Binary serialization strategies for transforming structs into bytes
# bincode = "1.3.3"
cdr = "0.2.4"

# A macro for declaring lazily evaluated statics
lazy_static = "1.4.0"

# Single assignment cells
once_cell = "1.19.0"
static_cell = "2.1.0"

# proc-macro A2L serializer for structs
xcp_type_description  = { path = "./xcp_type_description/", optional = true}
xcp_type_description_derive = { path = "./xcp_type_description/xcp_type_description_derive/", optional = true }

# proc-macro IDL generator
xcp_idl_generator  = { path = "./xcp_idl_generator/"}
xcp_idl_generator_derive  = { path = "./xcp_idl_generator/xcp_idl_generator_derive/"}




[dev-dependencies]

# used to implement the integration test XCP client and A2L parser
tokio = { version = "1.37.0", features = ["full"] }
a2lfile = "1.5.0"
bytes = "1.6.0"
xcp_client = { path = "xcp_client" }

[build-dependencies]
cc = "1.0"
build-info-build = "0.0.36"

# generate interface to XCPlite
bindgen = "0.69.4"


[profile.dev.package."*"]
debug = false
opt-level = 3

[profile.dev]
# panic = 'abort'
# lto = true
debug = true
opt-level = 2

[profile.release]
panic = 'abort'
debug = true
lto = true
opt-level = 3
