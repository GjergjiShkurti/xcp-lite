[package]
name = "xcp"
version = "0.3.0"
edition = "2021"
resolver = "2"
rust-version = "1.76"

authors = ["Vector Informatik GmbH, RDM"]
description = "XCP for Rust, based on XCPlite"
readme = "README.md"
keywords = ["XCP","Rust","Vector","ASAM","CANape","A2L"]
license = "MIT OR Apache-2.0"
homepage = "https://vector.com"  
repository = "https://github.com/vectorgrp/xcp-lite"
categories = ["MC"] 


[features]


[dependencies]

# Command line parser
clap = { version = "4.5.9", features = ["derive"] }

# Rust macro to automatically implement the builder pattern for arbitrary structs
derive_builder = "0.20.0"

# Raw FFI bindings to platform libraries like libc
libc = "0.2.153"

# A macro to ergonomically define an item depending on a large number of #[cfg] parameters. Structured like an if-else chain, the first matching branch is the item that gets emitted
# cfg-if = "1.0.0"

# Compile-time assertions to ensure that invariants are met
# static_assertions = "1.1.0"

# Macros for all your token pasting needs
# paste = "1.0.14"

# Logging
log = "0.4.21"
env_logger = "0.11.3"

# Collects build-information of your Rust crate
# used to generate EPK
# build-info = "0.0.36"

# A generic serialization/deserialization framework
# Used to handle json parameter files
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Binary serialization strategies for transforming structs into bytes
# bincode = "1.3.3"
cdr = "0.2.4"

# A macro for declaring lazily evaluated statics
lazy_static = "1.4.0"

# proc-macro A2L serializer for structs
xcp_type_description  = { path = "./xcp_type_description/"}
xcp_type_description_derive = { path = "./xcp_type_description/xcp_type_description_derive/" }

# proc-macro IDL generator
xcp_idl_generator  = { path = "./xcp_idl_generator/"}
xcp_idl_generator_derive  = { path = "./xcp_idl_generator/xcp_idl_generator_derive/"}


[dev-dependencies]

# used to implement the integration test XCP client and A2L parser
tokio = { version = "1.37.0", features = ["full"] }
a2lfile = "1.5.0"
bytes = "1.6.0"
xcp_client = { path = "xcp_client" }

[build-dependencies]
cc = "1.0"
build-info-build = "0.0.36"

# generate interface to XCPlite
bindgen = "0.69.4"


[profile.dev.package."*"]
debug = false
opt-level = 3

[profile.dev]
# panic = 'abort'
# lto = true
debug = true
opt-level = 2

[profile.release]
panic = 'abort'
debug = true
lto = true
opt-level = 3
